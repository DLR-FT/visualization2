convertModifiers({"Visualization2.Shapes.Files.CADFile","Visualization2.Shapes.Files.FlexibleBody",	"Visualization2.Shapes.Primitives.Cube",	"Visualization2.Shapes.Primitives.Sphere",	"Visualization2.Shapes.Primitives.Cylinder",	"Visualization2.Shapes.Primitives.Cone",	"Visualization2.Shapes.Primitives.Capsule",	"Visualization2.Shapes.Primitives.Plane",	"Visualization2.Shapes.Primitives.Prism",	"Visualization2.Shapes.Primitives.Icosahedron",	"Visualization2.Shapes.Primitives.Dodecahedron",	"Visualization2.Shapes.Parameterized.HollowCone",	"Visualization2.Shapes.Parameterized.Tube",	"Visualization2.Shapes.Parameterized.GearWheel",	"Visualization2.Shapes.Parameterized.Spring",	"Visualization2.Shapes.Parameterized.ExtrudedShape",	"Visualization2.Shapes.Parameterized.Pipe",	"Visualization2.Shapes.Parameterized.Beam",	"Visualization2.Shapes.Parameterized.Surface",	"Visualization2.Shapes.Parameterized.Line",	"Visualization2.Shapes.TextureTargets.TexturedSurface",	"Visualization2.Shapes.TextureTargets.DepthMesh",	"Visualization2.Shapes.Terrains.Terrain",	"Visualization2.Shapes.Billboards.Billboard",	"Visualization2.Shapes.Billboards.Text",	"Visualization2.Shapes.Billboards.ValueText",	"Visualization2.Shapes.PointClouds.RawPointCloud",	"Visualization2.Shapes.PointClouds.CameraPointCloud",	"Visualization2.Shapes.PointClouds.FilePointCloud",	"Visualization2.Shapes.PointClouds.StreamPointCloud",	"Visualization2.Lights.PointLight",	"Visualization2.Lights.SpotLight",	"Visualization2.Lights.DirectionalLight",	"Visualization2.FlowVisualization.PathFlow",	"Visualization2.FlowVisualization.GridParticleFlow",	"Visualization2.FlowVisualization.GridVectorField",	"Visualization2.Intersectors.LineIntersector"},               {"rotationType=Modelica.Mechanics.MultiBody.Types.RotationTypes.RotationAxis"},{"rotationType=if (%rotationType%==Modelica.Mechanics.MultiBody.Types.RotationTypes.PlanarRotationSequence) then Visualization2.Internal.Types.RotationTypes.PlanarRotationSequence elseif (%rotationType%==Modelica.Mechanics.MultiBody.Types.RotationTypes.TwoAxesVectors) then Visualization2.Internal.Types.RotationTypes.TwoAxesVectors else Visualization2.Internal.Types.RotationTypes.RotationAxis"},true);